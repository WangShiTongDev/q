@model CreateProjectViewModel

@*<h1>Create project</h1>
<form asp-action="CreateProject">
    <input name="name" type="text" value="" class="form-control" placeholder="name"/>
    <input name="Description" type="text" value="" class="form-control" placeholder="Description" />
    <div >
        <label asp-for="SelectedTechnologyIds">Выберите технологии</label>
        <select 
            asp-for="SelectedTechnologyIds" 
            asp-items="@Model.AvailableTechnologies"
            multiple 
            class="form-control">

        </select>
    </div>
    <input type="submit" value="create" class="btn btn-success"/>
</form>*@


<div class="container">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3>Створити проект</h3>
                </div>
                <div class="card-body">
                    <form asp-action="CreateProject" asp-controller="Project" method="post">
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            <input name="name" class="form-control" type="text" value="" placeholder="Назва" readonly />
                        </div>
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.shortDescription, "", new { @class = "text-danger" })
                            <input name="shortDescription" class="form-control" type="text" value="" required placeholder="Короткий опис"  />
                        </div>
                        
                        
                        <div class="mb-3 p-3 border border-3 rounded-3 ">
                            @Html.ValidationMessageFor(model => model.SelectedSkillsIds, "", new { @class = "text-danger" })
                            <select class="form-control selectpicker source" data-live-search="true">
                                <option value="">Технології</option>
                                @foreach (var item in Model.Skills as IList<SelectListItem>)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }

                            </select>
                            <hr />
                            <div class="selected">
                            </div>
                            <div id="hideInputs">
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            <textarea name="Description" class="form-control " placeholder="Опис" required ></textarea>
                        </div>
                        
                        <input class="w-100 btn btn-success" type="submit" value="Створити" />
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let source = document.querySelector('.source');
        let selected = document.querySelector('.selected')
        let hideInputs = document.querySelector('#hideInputs')




        let skillsSelect = new MySelect(hideInputs, source, selected, 'SelectedSkillsIds');



    </script>
}